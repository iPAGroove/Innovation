// auth.js

import {
    createUserWithEmailAndPassword,
    signInWithEmailAndPassword,
    onAuthStateChanged,
    signOut, // –•–æ—Ç—èsignOut –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ profile.js, –ª—É—á—à–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–¥–µ—Å—å –¥–ª—è –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω—ã
    updateProfile
} from "https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";
import { addDoc, collection, doc, setDoc, getDoc } from "https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";


// –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ profile.js
import { updateProfileDisplay } from './profile.js';

document.addEventListener("DOMContentLoaded", () => {
    const app = window.firebaseApp;
    const auth = window.auth;
    const db = window.db;

    if (!app || !auth || !db) {
        console.error("‚ùó Firebase App, Auth –∏–ª–∏ Firestore –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ index.html");
        return;
    }

    // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    const loginTab = document.getElementById('loginTab');
    const registerTab = document.getElementById('registerTab');
    const loginForm = document.getElementById('loginForm');
    const registerForm = document.getElementById('registerForm');
    const authContainer = document.querySelector('.auth-container');
    const profileInfoContainer = document.getElementById('profileInfoContainer');
    // logoutBtn —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è profile.js, –Ω–æ –∑–¥–µ—Å—å –º—ã –º–æ–∂–µ–º –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–∫—Ä—ã—Ç—å –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ñ–æ—Ä–º –ª–æ–≥–∏–Ω–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const logoutBtn = document.getElementById('logoutBtn'); // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
    const openAdminPanelBtn = document.getElementById('openAdminPanel');
    const openUsersPanelBtn = document.getElementById('openUsersPanel');
    const addButton = document.getElementById('addButton'); // –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê "–î–æ–±–∞–≤–∏—Ç—å"


    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const authTabs = document.querySelector('.auth-tabs');

    const loginEmailInput = document.getElementById('loginEmail');
    const loginPasswordInput = document.getElementById('loginPassword');
    const loginError = document.getElementById('loginError');

    const registerEmailInput = document.getElementById('registerEmail');
    const registerNicknameInput = document.getElementById('registerNickname');
    const registerPasswordInput = document.getElementById('registerPassword');
    const registerError = document.getElementById('registerError');

    const requiredElements = [
        loginTab, registerTab, loginForm, registerForm, authContainer,
        profileInfoContainer, logoutBtn, loginEmailInput, loginPasswordInput,
        loginError, registerEmailInput, registerNicknameInput, registerPasswordInput,
        registerError, openAdminPanelBtn, openUsersPanelBtn, authTabs, addButton // –î–æ–±–∞–≤–ª—è–µ–º addButton –≤ –ø—Ä–æ–≤–µ—Ä–∫—É
    ];

    if (requiredElements.some(el => !el)) {
        requiredElements.forEach(el => {
            if (!el) {
                console.error(`‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç DOM —ç–ª–µ–º–µ–Ω—Ç —Å ID: ${el ? el.id : 'undefined'}`);
            }
        });
        console.error("‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ DOM —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è auth.js");
        return;
    }

    function showAuthForm(isRegister) {
        profileInfoContainer.style.display = 'none';
        authTabs.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±—ã
        loginTab.classList.toggle('active', !isRegister);
        registerTab.classList.toggle('active', isRegister);
        loginForm.style.display = isRegister ? 'none' : 'flex';
        registerForm.style.display = isRegister ? 'flex' : 'none';
        authContainer.classList.remove('transparent-bg'); // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã —Ñ–æ—Ä–º–∞ –±—ã–ª–∞ –≤–∏–¥–Ω–∞
        loginError.textContent = '';
        registerError.textContent = '';

        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π/–≤—ã—Ö–æ–¥–∞/–¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        if (openAdminPanelBtn) openAdminPanelBtn.style.display = 'none';
        if (openUsersPanelBtn) openUsersPanelBtn.style.display = 'none';
        if (logoutBtn) logoutBtn.style.display = 'none'; // –¢–∞–∫–∂–µ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
        if (addButton) addButton.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å"
    }

    loginTab.addEventListener('click', () => showAuthForm(false));
    registerTab.addEventListener('click', () => showAuthForm(true));

    // –õ–æ–≥–∏–Ω
    loginForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const email = loginEmailInput.value.trim();
        const password = loginPasswordInput.value;
        loginError.textContent = '';

        try {
            await signInWithEmailAndPassword(auth, email, password);
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É');
            loginEmailInput.value = '';
            loginPasswordInput.value = '';
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error.code);
            loginError.textContent = getAuthErrorMessage(error.code, 'login');
        }
    });

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    registerForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const email = registerEmailInput.value.trim();
        const nickname = registerNicknameInput.value.trim();
        const password = registerPasswordInput.value;
        registerError.textContent = '';

        try {
            const userCredential = await createUserWithEmailAndPassword(auth, email, password);
            const user = userCredential.user;

            if (user && nickname) {
                await updateProfile(user, { displayName: nickname });
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é 'users' –≤ Firestore
            await setDoc(doc(db, "users", user.uid), {
                email: user.email,
                nickname: nickname,
                isVip: false, // –ü–æ –¥–µ—Ñ–æ–ª—Ç—É Free
                vipEndDate: null, // –ù–µ—Ç –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è VIP
                createdAt: new Date(),
                lastLogin: new Date(),
                isAdmin: false // –ü–æ –¥–µ—Ñ–æ–ª—Ç—É –Ω–µ –∞–¥–º–∏–Ω
            });

            console.log('üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é users');
            registerEmailInput.value = '';
            registerNicknameInput.value = '';
            registerPasswordInput.value = '';
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error.code);
            registerError.textContent = getAuthErrorMessage(error.code, 'register');
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    onAuthStateChanged(auth, async (user) => {
        let isAdmin = false;
        let isUserVip = false;
        let vipEndDate = null;

        if (user) {
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', user.email);
            // –°–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è
            authTabs.style.display = 'none';
            loginForm.style.display = 'none';
            registerForm.style.display = 'none';
            profileInfoContainer.style.display = 'flex'; // –ò–ó–ú–ï–ù–ï–ù–û: —Ç–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'flex'

            // –ü–æ–ª—É—á–∞–µ–º VIP-—Å—Ç–∞—Ç—É—Å –∏ —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'users'
            try {
                const userDocRef = doc(db, "users", user.uid);
                const userDocSnap = await getDoc(userDocRef);
                if (userDocSnap.exists()) {
                    const userData = userDocSnap.data();
                    isUserVip = userData.isVip || false;
                    vipEndDate = userData.vipEndDate || null; // –ü–æ–ª—É—á–∞–µ–º Timestamp –∏–ª–∏ null
                    isAdmin = userData.isAdmin || false; // –ë–µ—Ä–µ–º –∏–∑ Firestore
                    console.log(`User ${user.email} from Firestore: isAdmin=${isAdmin}, isVip=${isUserVip}, vipEndDate=${vipEndDate}`);

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ VIP
                    if (isUserVip && vipEndDate) {
                        const now = new Date();
                        const endDate = vipEndDate.toDate(); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Timestamp –≤ Date
                        if (endDate < now) {
                            isUserVip = false; // VIP –∏—Å—Ç–µ–∫
                            // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Free
                            await setDoc(userDocRef, { isVip: false, vipEndDate: null }, { merge: true });
                            console.log(`VIP —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email} –∏—Å—Ç–µ–∫ –∏ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ Free.`);
                        }
                    }
                } else {
                    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
                    console.warn(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'users'. –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å.`);
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –ø–æ email (–∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
                    const adminEmails = ["ipagroove@gmail.com"]; // –í–∞—à–∏ –∞–¥–º–∏–Ω—Å–∫–∏–µ email-—ã
                    isAdmin = adminEmails.includes(user.email);
                    await setDoc(doc(db, "users", user.uid), {
                        email: user.email,
                        nickname: user.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                        isVip: false,
                        vipEndDate: null,
                        createdAt: new Date(),
                        lastLogin: new Date(),
                        isAdmin: isAdmin // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ –≤ Firestore
                    });
                }
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ VIP/Admin —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º lastLogin –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—Ö–æ–¥–µ
            try {
                const userDocRef = doc(db, "users", user.uid);
                await setDoc(userDocRef, { lastLogin: new Date() }, { merge: true });
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è lastLogin:", error);
            }

        } else {
            console.log('üîí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Å–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è
            authTabs.style.display = 'flex';
            loginTab.click(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            profileInfoContainer.style.display = 'none';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ VIP-—Å—Ç–∞—Ç—É—Å–∞
        window.currentUserIsVip = isUserVip;
        window.currentUserVipEndDate = vipEndDate ? vipEndDate.toDate() : null; // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —ç—Ç–æ Date –æ–±—ä–µ–∫—Ç

        // –ü–µ—Ä–µ–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ –∏ VIP –≤ —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        updateProfileDisplay(user, isAdmin, isUserVip, vipEndDate);

        // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è VIP-—Å—Ç–∞—Ç—É—Å–∞
        window.loadRealtimeCollection('Games', 'games');
        window.loadRealtimeCollection('Apps', 'apps');
    });

    function getAuthErrorMessage(code, mode) {
        switch (code) {
            case 'auth/invalid-email':
                return '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.';
            case 'auth/user-disabled':
                return '–ê–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω.';
            case 'auth/user-not-found':
            case 'auth/wrong-password':
            case 'auth/invalid-credential':
                return mode === 'login' ? '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å.' : '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.';
            case 'auth/email-already-in-use':
                return 'Email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.';
            case 'auth/weak-password':
                return '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤.';
            case 'auth/too-many-requests':
                return '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
            default:
                return `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ (${code}).`;
        }
    }
});
