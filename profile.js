// profile.js

import { updateProfile as firebaseUpdateProfile, signOut } from "https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";
import { doc, getDoc, updateDoc } from "https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";

const profileNicknameDisplay = document.getElementById('profileNicknameDisplay');
const profileInfoContainer = document.getElementById('profileInfoContainer');
const openAdminPanelBtn = document.getElementById('openAdminPanel');
const openUsersPanelBtn = document.getElementById('openUsersPanel');
const freeAccessBtn = document.getElementById('freeAccessBtn');
const upgradeVipBtn = document.getElementById('upgradeVipBtn');

// –û–ß–ï–ù–¨ –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –≤ HTML
const accountSettingsLink = document.querySelector('.account-settings-link');
const arrowDownIcon = document.querySelector('.account-settings-link .arrow-down');
const profileCard = document.querySelector('.profile-card'); // –≠–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è

// –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è (–æ–Ω–∏ –≤–Ω—É—Ç—Ä–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –±–ª–æ–∫–∞)
const editProfileNicknameInput = document.getElementById('editProfileNickname');
const saveProfileBtn = document.getElementById('saveProfileBtn');
const logoutBtn = document.getElementById('logoutBtn'); // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞, —Ç–µ–ø–µ—Ä—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
export function updateProfileDisplay(user, isAdmin, isUserVip, vipEndDate) {
    if (user) {
        profileNicknameDisplay.textContent = user.displayName || user.email;

        if (isUserVip) {
            freeAccessBtn.style.display = 'none';
            upgradeVipBtn.textContent = 'üëë VIP Access';
            upgradeVipBtn.style.background = 'linear-gradient(90deg, #8A2BE2 0%, #8A2BE2 100%)';
            upgradeVipBtn.style.color = '#fff';
            if (vipEndDate) {
                const date = new Date(vipEndDate.seconds * 1000);
                upgradeVipBtn.textContent += ` (–¥–æ ${date.toLocaleDateString()})`;
            }
        } else {
            freeAccessBtn.style.display = 'inline-block';
            upgradeVipBtn.textContent = '‚ö° Upgrade to VIP';
            upgradeVipBtn.style.background = 'linear-gradient(90deg, #ffba36 0%, #ff6636 100%)';
            upgradeVipBtn.style.color = '#fff';
        }

        if (isAdmin) {
            openAdminPanelBtn.style.display = 'block';
            openUsersPanelBtn.style.display = 'block';
        } else {
            openAdminPanelBtn.style.display = 'none';
            openUsersPanelBtn.style.display = 'none';
        }

        // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è expanded –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (profileCard) {
            profileCard.classList.remove('expanded');
        }
        if (arrowDownIcon) arrowDownIcon.classList.remove('rotate');
        if (editProfileNicknameInput) editProfileNicknameInput.style.display = 'none';
        if (saveProfileBtn) saveProfileBtn.style.display = 'none';
        if (logoutBtn) logoutBtn.style.display = 'none';

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è
        if (profileInfoContainer) profileInfoContainer.style.display = 'flex';

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∏–≥—Ä–∞—Ö/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
        window.currentUserIsVip = isUserVip;
        window.currentUserVipEndDate = vipEndDate;
        window.loadRealtimeCollection('Games', 'games');
        window.loadRealtimeCollection('Apps', 'apps');
    } else {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        if (profileInfoContainer) profileInfoContainer.style.display = 'none';
        if (openAdminPanelBtn) openAdminPanelBtn.style.display = 'none';
        if (openUsersPanelBtn) openUsersPanelBtn.style.display = 'none';

        window.currentUserIsVip = false;
        window.currentUserVipEndDate = null;
        window.loadRealtimeCollection('Games', 'games');
        window.loadRealtimeCollection('Apps', 'apps');
    }
}

document.addEventListener("DOMContentLoaded", () => {
    // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
    if (logoutBtn) {
        logoutBtn.addEventListener('click', async () => {
            try {
                await signOut(window.auth);
                const menuPanel = document.getElementById('menuPanel');
                if (menuPanel) menuPanel.classList.remove('open');
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error.message);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            }
        });
    } else {
        console.warn("–ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ 'logoutBtn' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
    }

    // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Å—Å—ã–ª–∫–∏ "Account Settings"
    if (accountSettingsLink && profileCard && arrowDownIcon && editProfileNicknameInput && saveProfileBtn && logoutBtn) {
        accountSettingsLink.addEventListener('click', (e) => {
            e.preventDefault();
            profileCard.classList.toggle('expanded');
            arrowDownIcon.classList.toggle('rotate');

            const isExpanded = profileCard.classList.contains('expanded');
            editProfileNicknameInput.style.display = isExpanded ? 'block' : 'none';
            saveProfileBtn.style.display = isExpanded ? 'block' : 'none';
            logoutBtn.style.display = isExpanded ? 'block' : 'none';

            if (isExpanded && window.auth && window.auth.currentUser) {
                editProfileNicknameInput.value = window.auth.currentUser.displayName || '';
            }
        });
    } else {
        console.warn("–û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è 'Account Settings' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: accountSettingsLink, profileCard, arrowDownIcon, editProfileNicknameInput, saveProfileBtn, logoutBtn.");
    }

    // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Save Profile"
    if (saveProfileBtn) {
        saveProfileBtn.addEventListener('click', async () => {
            const user = window.auth.currentUser;
            const newNickname = editProfileNicknameInput.value.trim();

            if (!user) {
                alert('–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.');
                return;
            }

            if (newNickname === user.displayName) {
                alert('–ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º.');
                return;
            }

            if (!newNickname) {
                alert('–ù–∏–∫–Ω–µ–π–º –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.');
                return;
            }

            try {
                await firebaseUpdateProfile(user, { displayName: newNickname });
                await updateDoc(doc(window.db, "users", user.uid), {
                    nickname: newNickname,
                    lastModifiedAt: new Date()
                });
                profileNicknameDisplay.textContent = newNickname;
                alert('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:", error);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: ' + error.message);
            }
        });
    } else {
        console.warn("–ö–Ω–æ–ø–∫–∞ 'saveProfileBtn' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
    }

    // –°–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ Free Access –∏ Upgrade to VIP
    if (freeAccessBtn) {
        freeAccessBtn.addEventListener('click', () => {
            // –ü–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º (–∏–ª–∏ –ø–æ–∫–∞–∂–∏ alert –µ—Å–ª–∏ —Ö–æ—á–µ—à—å)
        });
    }
    if (upgradeVipBtn) {
        upgradeVipBtn.addEventListener('click', () => {
            window.open('https://example.com/vip', '_blank'); // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é —Å—Å—ã–ª–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        });
    }
});
